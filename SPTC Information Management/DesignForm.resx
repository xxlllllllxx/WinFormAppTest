<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>